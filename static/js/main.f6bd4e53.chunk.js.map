{"version":3,"sources":["components/context/AppContext.tsx","components/Navigation/Navigation.tsx","App.tsx","components/HomePage/HomePage.tsx","components/Loader/Loader.tsx","api.ts","components/User/User.tsx","components/PeopleList/PeopleList.tsx","components/PageNotFound/PageNotFound.tsx","Root.tsx","index.tsx"],"names":["AppContext","createContext","hasClickedPeopleLink","setHasClickedPeopleLink","AppProvider","children","useState","Provider","value","useAppContext","useContext","getClassLink","isActive","cn","Navigation","className","role","to","onClick","App","HomePage","Loader","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","findRelative","gender","user","users","filter","oneUser","sex","find","name","fatherName","motherName","User","person","people","selectedUser","born","died","slug","findMother","findFather","PeopleList","setPeople","isErrorToGetPeople","setIsErrorToGetPeople","isLoading","setIsLoading","selectId","useParams","p","useEffect","allPersons","catch","Error","finally","length","map","PageNotFound","Root","path","element","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.f6bd4e53.chunk.js","sourcesContent":["import React, { createContext, useContext, useState } from 'react';\n\ntype AppContextType = {\n  hasClickedPeopleLink: boolean;\n  setHasClickedPeopleLink: React.Dispatch<React.SetStateAction<boolean>>;\n};\n\nexport const AppContext = createContext<AppContextType>(\n  {\n    hasClickedPeopleLink: false,\n    setHasClickedPeopleLink: () => {},\n  },\n);\n\ntype Props = {\n  children: React.ReactNode,\n};\n\nexport const AppProvider: React.FC<Props> = ({ children }) => {\n  const [hasClickedPeopleLink, setHasClickedPeopleLink] = useState(false);\n\n  return (\n    <AppContext.Provider\n      value={{ hasClickedPeopleLink, setHasClickedPeopleLink }}\n    >\n      {children}\n    </AppContext.Provider>\n  );\n};\n\nexport const useAppContext = () => useContext(AppContext);\n","import { NavLink } from 'react-router-dom';\nimport cn from 'classnames';\nimport { useAppContext } from '../context/AppContext';\n\nconst getClassLink = ({ isActive }: { isActive: boolean }) => {\n  return (\n    cn('navbar-item', { 'has-background-grey-lighter': isActive })\n  );\n};\n\nexport const Navigation = () => {\n  const { setHasClickedPeopleLink } = useAppContext();\n\n  const handlePeopleClick = () => {\n    setHasClickedPeopleLink(true);\n  };\n\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            to=\"/\"\n            className={getClassLink}\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            onClick={handlePeopleClick}\n            to=\"/people\"\n            className={getClassLink}\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import './App.scss';\nimport { Outlet } from 'react-router-dom';\nimport { Navigation } from './components/Navigation';\nimport { AppProvider } from './components/context/AppContext';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <AppProvider>\n      <Navigation />\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Outlet />\n        </div>\n      </main>\n    </AppProvider>\n  </div>\n);\n","export const HomePage = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { Link } from 'react-router-dom';\nimport cn from 'classnames';\nimport React from 'react';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person,\n  people: Person[],\n  selectedUser?: Person,\n};\n\nconst findRelative = (gender: string, user: Person, users: Person[]) => {\n  if (gender === 'm') {\n    return users.filter(oneUser => oneUser.sex === 'm')\n      .find(oneUser => oneUser.name === user.fatherName);\n  }\n\n  if (gender === 'f') {\n    return users.filter(oneUser => oneUser.sex === 'f')\n      .find(oneUser => oneUser.name === user.motherName);\n  }\n\n  return undefined;\n};\n\nexport const User: React.FC<Props> = ({ person, people, selectedUser }) => {\n  const {\n    name,\n    sex,\n    born,\n    died,\n    motherName,\n    fatherName,\n    slug,\n  } = person;\n\n  const findMother = findRelative('f', person, people);\n  const findFather = findRelative('m', person, people);\n\n  return (\n    <tr\n      key={slug}\n      className={cn({ 'has-background-warning': slug === selectedUser?.slug })}\n      data-cy=\"person\"\n    >\n      <td>\n        <Link\n          to={`/people/${slug}`}\n          className={cn({ 'has-text-danger': sex === 'f' })}\n        >\n          {name}\n        </Link>\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>\n        {findMother ? (\n          <Link\n            to={`/people/${findMother.slug}`}\n            className={cn({ 'has-text-danger': findMother.sex === 'f' })}\n          >\n            {findMother.name}\n          </Link>\n        )\n          : motherName || '-'}\n      </td>\n\n      <td>\n        {findFather && (\n          <Link\n            to={`/people/${findFather.slug}`}\n            className={cn({ 'has-text-danger': findFather.sex === 'f' })}\n          >\n            {findFather.name}\n          </Link>\n        )}\n\n        {(!findFather && fatherName) ? (\n          fatherName\n        ) : '-'}\n      </td>\n    </tr>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Loader } from '../Loader';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types';\nimport { useAppContext } from '../context/AppContext';\nimport { User } from '../User';\n\nexport const PeopleList = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isErrorToGetPeople, setIsErrorToGetPeople] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const { hasClickedPeopleLink } = useAppContext();\n  const { slug } = useParams();\n  const selectId = slug || '';\n  const selectedUser = people.find(p => p.slug === selectId);\n\n  useEffect(() => {\n    if (hasClickedPeopleLink) {\n      getPeople()\n        .then((allPersons) => setPeople(allPersons))\n        .catch(() => {\n          setIsErrorToGetPeople(true);\n          throw new Error(' Something went wrong');\n        })\n        .finally(() => setIsLoading(false));\n    }\n  }, [hasClickedPeopleLink]);\n\n  return (\n    <div className=\"block\">\n      <div className=\"box table-container\">\n        <h1 className=\"title\">People Page</h1>\n\n        {isErrorToGetPeople && (\n          <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n            Something went wrong\n          </p>\n        )}\n\n        {(!people.length && !isErrorToGetPeople) && (\n          <Loader />\n        )}\n\n        {!!people.length && (\n          <table\n            data-cy=\"peopleTable\"\n            className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n          >\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Sex</th>\n                <th>Born</th>\n                <th>Died</th>\n                <th>Mother</th>\n                <th>Father</th>\n              </tr>\n            </thead>\n\n            <tbody>\n              {people.map((person) => {\n                return (\n                  <User\n                    key={person.slug}\n                    people={people}\n                    person={person}\n                    selectedUser={selectedUser}\n                  />\n                );\n              })}\n            </tbody>\n          </table>\n        )}\n\n        {(!isLoading && !people.length) && (\n          <p data-cy=\"noPeopleMessage\">\n            There are no people on the server\n          </p>\n        )}\n      </div>\n    </div>\n  );\n};\n","export const PageNotFound = () => {\n  return (\n    <h1>Page not found</h1>\n  );\n};\n","import {\n  HashRouter, Navigate, Route, Routes,\n} from 'react-router-dom';\nimport { App } from './App';\nimport { HomePage } from './components/HomePage';\nimport { PeopleList } from './components/PeopleList';\nimport { PageNotFound } from './components/PageNotFound/PageNotFound';\n\nexport const Root = () => (\n  <HashRouter>\n    <Routes>\n      <Route path=\"/\" element={<App />}>\n        <Route index element={<HomePage />} />\n        <Route path=\"people\" element={<PeopleList />}>\n          <Route path=\"/people/:slug?\" element={<PeopleList />} />\n        </Route>\n      </Route>\n      <Route path=\"*\" element={<App />}>\n        <Route index element={<HomePage />} />\n        <Route path=\"*\" element={<PageNotFound />} />\n      </Route>\n      <Route path=\"home\" element={<Navigate to=\"..\" />} />\n    </Routes>\n  </HashRouter>\n);\n","import { createRoot } from 'react-dom/client';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { Root } from './Root';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Root />,\n  );\n"],"sourceRoot":""}